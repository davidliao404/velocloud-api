<?php
/**
 * EdgeDeviceSettingsDataOspf1
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Velocloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EdgeDeviceSettingsDataOspf1 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EdgeDeviceSettingsDataOspf1 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'edgeDeviceSettingsData_ospf_1';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'area' => 'int',
        'authentication' => 'bool',
        'auth_id' => 'int',
        'auth_passphrase' => 'string',
        'cost' => 'int',
        'dead_timer' => 'int',
        'enabled' => 'bool',
        'hello_timer' => 'int',
        'inbound_route_learning' => '\Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning',
        'md5_authentication' => 'bool',
        'mtu' => 'int',
        'outbound_route_advertisement' => '\Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning',
        'passive' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'area' => null,
        'authentication' => null,
        'auth_id' => null,
        'auth_passphrase' => null,
        'cost' => null,
        'dead_timer' => null,
        'enabled' => null,
        'hello_timer' => null,
        'inbound_route_learning' => null,
        'md5_authentication' => null,
        'mtu' => null,
        'outbound_route_advertisement' => null,
        'passive' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'area' => 'area',
        'authentication' => 'authentication',
        'auth_id' => 'authId',
        'auth_passphrase' => 'authPassphrase',
        'cost' => 'cost',
        'dead_timer' => 'deadTimer',
        'enabled' => 'enabled',
        'hello_timer' => 'helloTimer',
        'inbound_route_learning' => 'inboundRouteLearning',
        'md5_authentication' => 'md5Authentication',
        'mtu' => 'MTU',
        'outbound_route_advertisement' => 'outboundRouteAdvertisement',
        'passive' => 'passive'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'area' => 'setArea',
        'authentication' => 'setAuthentication',
        'auth_id' => 'setAuthId',
        'auth_passphrase' => 'setAuthPassphrase',
        'cost' => 'setCost',
        'dead_timer' => 'setDeadTimer',
        'enabled' => 'setEnabled',
        'hello_timer' => 'setHelloTimer',
        'inbound_route_learning' => 'setInboundRouteLearning',
        'md5_authentication' => 'setMd5Authentication',
        'mtu' => 'setMtu',
        'outbound_route_advertisement' => 'setOutboundRouteAdvertisement',
        'passive' => 'setPassive'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'area' => 'getArea',
        'authentication' => 'getAuthentication',
        'auth_id' => 'getAuthId',
        'auth_passphrase' => 'getAuthPassphrase',
        'cost' => 'getCost',
        'dead_timer' => 'getDeadTimer',
        'enabled' => 'getEnabled',
        'hello_timer' => 'getHelloTimer',
        'inbound_route_learning' => 'getInboundRouteLearning',
        'md5_authentication' => 'getMd5Authentication',
        'mtu' => 'getMtu',
        'outbound_route_advertisement' => 'getOutboundRouteAdvertisement',
        'passive' => 'getPassive'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['area'] = isset($data['area']) ? $data['area'] : null;
        $this->container['authentication'] = isset($data['authentication']) ? $data['authentication'] : null;
        $this->container['auth_id'] = isset($data['auth_id']) ? $data['auth_id'] : null;
        $this->container['auth_passphrase'] = isset($data['auth_passphrase']) ? $data['auth_passphrase'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['dead_timer'] = isset($data['dead_timer']) ? $data['dead_timer'] : null;
        $this->container['enabled'] = isset($data['enabled']) ? $data['enabled'] : null;
        $this->container['hello_timer'] = isset($data['hello_timer']) ? $data['hello_timer'] : null;
        $this->container['inbound_route_learning'] = isset($data['inbound_route_learning']) ? $data['inbound_route_learning'] : null;
        $this->container['md5_authentication'] = isset($data['md5_authentication']) ? $data['md5_authentication'] : null;
        $this->container['mtu'] = isset($data['mtu']) ? $data['mtu'] : null;
        $this->container['outbound_route_advertisement'] = isset($data['outbound_route_advertisement']) ? $data['outbound_route_advertisement'] : null;
        $this->container['passive'] = isset($data['passive']) ? $data['passive'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets area
     *
     * @return int
     */
    public function getArea()
    {
        return $this->container['area'];
    }

    /**
     * Sets area
     *
     * @param int $area area
     *
     * @return $this
     */
    public function setArea($area)
    {
        $this->container['area'] = $area;

        return $this;
    }

    /**
     * Gets authentication
     *
     * @return bool
     */
    public function getAuthentication()
    {
        return $this->container['authentication'];
    }

    /**
     * Sets authentication
     *
     * @param bool $authentication authentication
     *
     * @return $this
     */
    public function setAuthentication($authentication)
    {
        $this->container['authentication'] = $authentication;

        return $this;
    }

    /**
     * Gets auth_id
     *
     * @return int
     */
    public function getAuthId()
    {
        return $this->container['auth_id'];
    }

    /**
     * Sets auth_id
     *
     * @param int $auth_id auth_id
     *
     * @return $this
     */
    public function setAuthId($auth_id)
    {
        $this->container['auth_id'] = $auth_id;

        return $this;
    }

    /**
     * Gets auth_passphrase
     *
     * @return string
     */
    public function getAuthPassphrase()
    {
        return $this->container['auth_passphrase'];
    }

    /**
     * Sets auth_passphrase
     *
     * @param string $auth_passphrase auth_passphrase
     *
     * @return $this
     */
    public function setAuthPassphrase($auth_passphrase)
    {
        $this->container['auth_passphrase'] = $auth_passphrase;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return int
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param int $cost cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets dead_timer
     *
     * @return int
     */
    public function getDeadTimer()
    {
        return $this->container['dead_timer'];
    }

    /**
     * Sets dead_timer
     *
     * @param int $dead_timer dead_timer
     *
     * @return $this
     */
    public function setDeadTimer($dead_timer)
    {
        $this->container['dead_timer'] = $dead_timer;

        return $this;
    }

    /**
     * Gets enabled
     *
     * @return bool
     */
    public function getEnabled()
    {
        return $this->container['enabled'];
    }

    /**
     * Sets enabled
     *
     * @param bool $enabled enabled
     *
     * @return $this
     */
    public function setEnabled($enabled)
    {
        $this->container['enabled'] = $enabled;

        return $this;
    }

    /**
     * Gets hello_timer
     *
     * @return int
     */
    public function getHelloTimer()
    {
        return $this->container['hello_timer'];
    }

    /**
     * Sets hello_timer
     *
     * @param int $hello_timer hello_timer
     *
     * @return $this
     */
    public function setHelloTimer($hello_timer)
    {
        $this->container['hello_timer'] = $hello_timer;

        return $this;
    }

    /**
     * Gets inbound_route_learning
     *
     * @return \Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning
     */
    public function getInboundRouteLearning()
    {
        return $this->container['inbound_route_learning'];
    }

    /**
     * Sets inbound_route_learning
     *
     * @param \Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning $inbound_route_learning inbound_route_learning
     *
     * @return $this
     */
    public function setInboundRouteLearning($inbound_route_learning)
    {
        $this->container['inbound_route_learning'] = $inbound_route_learning;

        return $this;
    }

    /**
     * Gets md5_authentication
     *
     * @return bool
     */
    public function getMd5Authentication()
    {
        return $this->container['md5_authentication'];
    }

    /**
     * Sets md5_authentication
     *
     * @param bool $md5_authentication md5_authentication
     *
     * @return $this
     */
    public function setMd5Authentication($md5_authentication)
    {
        $this->container['md5_authentication'] = $md5_authentication;

        return $this;
    }

    /**
     * Gets mtu
     *
     * @return int
     */
    public function getMtu()
    {
        return $this->container['mtu'];
    }

    /**
     * Sets mtu
     *
     * @param int $mtu mtu
     *
     * @return $this
     */
    public function setMtu($mtu)
    {
        $this->container['mtu'] = $mtu;

        return $this;
    }

    /**
     * Gets outbound_route_advertisement
     *
     * @return \Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning
     */
    public function getOutboundRouteAdvertisement()
    {
        return $this->container['outbound_route_advertisement'];
    }

    /**
     * Sets outbound_route_advertisement
     *
     * @param \Swagger\Client\Model\EdgeDeviceSettingsDataOspfInboundRouteLearning $outbound_route_advertisement outbound_route_advertisement
     *
     * @return $this
     */
    public function setOutboundRouteAdvertisement($outbound_route_advertisement)
    {
        $this->container['outbound_route_advertisement'] = $outbound_route_advertisement;

        return $this;
    }

    /**
     * Gets passive
     *
     * @return bool
     */
    public function getPassive()
    {
        return $this->container['passive'];
    }

    /**
     * Sets passive
     *
     * @param bool $passive passive
     *
     * @return $this
     */
    public function setPassive($passive)
    {
        $this->container['passive'] = $passive;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


