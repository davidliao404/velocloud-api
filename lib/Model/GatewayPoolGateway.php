<?php
/**
 * GatewayPoolGateway
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Velocloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * GatewayPoolGateway Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GatewayPoolGateway implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'gateway_pool_gateway';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'gateway_pool_assoc_id' => 'int',
        'pool_name' => 'string',
        'id' => 'int',
        'created' => '\DateTime',
        'network_id' => 'int',
        'enterprise_proxy_id' => 'int',
        'site_id' => 'int',
        'activation_key' => 'string',
        'activation_state' => 'string',
        'activation_time' => '\DateTime',
        'software_version' => 'string',
        'build_number' => 'string',
        'utilization' => 'float',
        'utilization_detail' => '\Swagger\Client\Model\GatewayPoolGatewayUtilizationDetail',
        'connected_edges' => 'int',
        'connected_edge_list' => '\Swagger\Client\Model\GatewayPoolGatewayConnectedEdgeList[]',
        'device_id' => 'string',
        'logical_id' => 'string',
        'name' => 'string',
        'gateway_state' => 'string',
        'alerts_enabled' => 'int',
        'description' => 'string',
        'dns_name' => 'string',
        'is_load_balanced' => 'int',
        'private_ip_address' => 'string',
        'ip_address' => 'string',
        'last_contact' => '\DateTime',
        'system_up_since' => '\DateTime',
        'service_up_since' => '\DateTime',
        'service_state' => 'string',
        'endpoint_pki_mode' => 'string',
        'hand_off_detail' => '\Swagger\Client\Model\GatewayHandoffDetail',
        'ipsec_gateway_detail' => '\Swagger\Client\Model\GatewayPoolGatewayIpsecGatewayDetail',
        'modified' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'gateway_pool_assoc_id' => null,
        'pool_name' => null,
        'id' => null,
        'created' => 'date-time',
        'network_id' => null,
        'enterprise_proxy_id' => null,
        'site_id' => null,
        'activation_key' => null,
        'activation_state' => null,
        'activation_time' => 'date-time',
        'software_version' => null,
        'build_number' => null,
        'utilization' => null,
        'utilization_detail' => null,
        'connected_edges' => null,
        'connected_edge_list' => null,
        'device_id' => null,
        'logical_id' => null,
        'name' => null,
        'gateway_state' => null,
        'alerts_enabled' => null,
        'description' => null,
        'dns_name' => null,
        'is_load_balanced' => null,
        'private_ip_address' => null,
        'ip_address' => null,
        'last_contact' => 'date-time',
        'system_up_since' => 'date-time',
        'service_up_since' => 'date-time',
        'service_state' => null,
        'endpoint_pki_mode' => null,
        'hand_off_detail' => null,
        'ipsec_gateway_detail' => null,
        'modified' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'gateway_pool_assoc_id' => 'gatewayPoolAssocId',
        'pool_name' => 'poolName',
        'id' => 'id',
        'created' => 'created',
        'network_id' => 'networkId',
        'enterprise_proxy_id' => 'enterpriseProxyId',
        'site_id' => 'siteId',
        'activation_key' => 'activationKey',
        'activation_state' => 'activationState',
        'activation_time' => 'activationTime',
        'software_version' => 'softwareVersion',
        'build_number' => 'buildNumber',
        'utilization' => 'utilization',
        'utilization_detail' => 'utilizationDetail',
        'connected_edges' => 'connectedEdges',
        'connected_edge_list' => 'connectedEdgeList',
        'device_id' => 'deviceId',
        'logical_id' => 'logicalId',
        'name' => 'name',
        'gateway_state' => 'gatewayState',
        'alerts_enabled' => 'alertsEnabled',
        'description' => 'description',
        'dns_name' => 'dnsName',
        'is_load_balanced' => 'isLoadBalanced',
        'private_ip_address' => 'privateIpAddress',
        'ip_address' => 'ipAddress',
        'last_contact' => 'lastContact',
        'system_up_since' => 'systemUpSince',
        'service_up_since' => 'serviceUpSince',
        'service_state' => 'serviceState',
        'endpoint_pki_mode' => 'endpointPkiMode',
        'hand_off_detail' => 'handOffDetail',
        'ipsec_gateway_detail' => 'ipsecGatewayDetail',
        'modified' => 'modified'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'gateway_pool_assoc_id' => 'setGatewayPoolAssocId',
        'pool_name' => 'setPoolName',
        'id' => 'setId',
        'created' => 'setCreated',
        'network_id' => 'setNetworkId',
        'enterprise_proxy_id' => 'setEnterpriseProxyId',
        'site_id' => 'setSiteId',
        'activation_key' => 'setActivationKey',
        'activation_state' => 'setActivationState',
        'activation_time' => 'setActivationTime',
        'software_version' => 'setSoftwareVersion',
        'build_number' => 'setBuildNumber',
        'utilization' => 'setUtilization',
        'utilization_detail' => 'setUtilizationDetail',
        'connected_edges' => 'setConnectedEdges',
        'connected_edge_list' => 'setConnectedEdgeList',
        'device_id' => 'setDeviceId',
        'logical_id' => 'setLogicalId',
        'name' => 'setName',
        'gateway_state' => 'setGatewayState',
        'alerts_enabled' => 'setAlertsEnabled',
        'description' => 'setDescription',
        'dns_name' => 'setDnsName',
        'is_load_balanced' => 'setIsLoadBalanced',
        'private_ip_address' => 'setPrivateIpAddress',
        'ip_address' => 'setIpAddress',
        'last_contact' => 'setLastContact',
        'system_up_since' => 'setSystemUpSince',
        'service_up_since' => 'setServiceUpSince',
        'service_state' => 'setServiceState',
        'endpoint_pki_mode' => 'setEndpointPkiMode',
        'hand_off_detail' => 'setHandOffDetail',
        'ipsec_gateway_detail' => 'setIpsecGatewayDetail',
        'modified' => 'setModified'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'gateway_pool_assoc_id' => 'getGatewayPoolAssocId',
        'pool_name' => 'getPoolName',
        'id' => 'getId',
        'created' => 'getCreated',
        'network_id' => 'getNetworkId',
        'enterprise_proxy_id' => 'getEnterpriseProxyId',
        'site_id' => 'getSiteId',
        'activation_key' => 'getActivationKey',
        'activation_state' => 'getActivationState',
        'activation_time' => 'getActivationTime',
        'software_version' => 'getSoftwareVersion',
        'build_number' => 'getBuildNumber',
        'utilization' => 'getUtilization',
        'utilization_detail' => 'getUtilizationDetail',
        'connected_edges' => 'getConnectedEdges',
        'connected_edge_list' => 'getConnectedEdgeList',
        'device_id' => 'getDeviceId',
        'logical_id' => 'getLogicalId',
        'name' => 'getName',
        'gateway_state' => 'getGatewayState',
        'alerts_enabled' => 'getAlertsEnabled',
        'description' => 'getDescription',
        'dns_name' => 'getDnsName',
        'is_load_balanced' => 'getIsLoadBalanced',
        'private_ip_address' => 'getPrivateIpAddress',
        'ip_address' => 'getIpAddress',
        'last_contact' => 'getLastContact',
        'system_up_since' => 'getSystemUpSince',
        'service_up_since' => 'getServiceUpSince',
        'service_state' => 'getServiceState',
        'endpoint_pki_mode' => 'getEndpointPkiMode',
        'hand_off_detail' => 'getHandOffDetail',
        'ipsec_gateway_detail' => 'getIpsecGatewayDetail',
        'modified' => 'getModified'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['gateway_pool_assoc_id'] = isset($data['gateway_pool_assoc_id']) ? $data['gateway_pool_assoc_id'] : null;
        $this->container['pool_name'] = isset($data['pool_name']) ? $data['pool_name'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['created'] = isset($data['created']) ? $data['created'] : null;
        $this->container['network_id'] = isset($data['network_id']) ? $data['network_id'] : null;
        $this->container['enterprise_proxy_id'] = isset($data['enterprise_proxy_id']) ? $data['enterprise_proxy_id'] : null;
        $this->container['site_id'] = isset($data['site_id']) ? $data['site_id'] : null;
        $this->container['activation_key'] = isset($data['activation_key']) ? $data['activation_key'] : null;
        $this->container['activation_state'] = isset($data['activation_state']) ? $data['activation_state'] : null;
        $this->container['activation_time'] = isset($data['activation_time']) ? $data['activation_time'] : null;
        $this->container['software_version'] = isset($data['software_version']) ? $data['software_version'] : null;
        $this->container['build_number'] = isset($data['build_number']) ? $data['build_number'] : null;
        $this->container['utilization'] = isset($data['utilization']) ? $data['utilization'] : null;
        $this->container['utilization_detail'] = isset($data['utilization_detail']) ? $data['utilization_detail'] : null;
        $this->container['connected_edges'] = isset($data['connected_edges']) ? $data['connected_edges'] : null;
        $this->container['connected_edge_list'] = isset($data['connected_edge_list']) ? $data['connected_edge_list'] : null;
        $this->container['device_id'] = isset($data['device_id']) ? $data['device_id'] : null;
        $this->container['logical_id'] = isset($data['logical_id']) ? $data['logical_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['gateway_state'] = isset($data['gateway_state']) ? $data['gateway_state'] : null;
        $this->container['alerts_enabled'] = isset($data['alerts_enabled']) ? $data['alerts_enabled'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dns_name'] = isset($data['dns_name']) ? $data['dns_name'] : null;
        $this->container['is_load_balanced'] = isset($data['is_load_balanced']) ? $data['is_load_balanced'] : null;
        $this->container['private_ip_address'] = isset($data['private_ip_address']) ? $data['private_ip_address'] : null;
        $this->container['ip_address'] = isset($data['ip_address']) ? $data['ip_address'] : null;
        $this->container['last_contact'] = isset($data['last_contact']) ? $data['last_contact'] : null;
        $this->container['system_up_since'] = isset($data['system_up_since']) ? $data['system_up_since'] : null;
        $this->container['service_up_since'] = isset($data['service_up_since']) ? $data['service_up_since'] : null;
        $this->container['service_state'] = isset($data['service_state']) ? $data['service_state'] : null;
        $this->container['endpoint_pki_mode'] = isset($data['endpoint_pki_mode']) ? $data['endpoint_pki_mode'] : null;
        $this->container['hand_off_detail'] = isset($data['hand_off_detail']) ? $data['hand_off_detail'] : null;
        $this->container['ipsec_gateway_detail'] = isset($data['ipsec_gateway_detail']) ? $data['ipsec_gateway_detail'] : null;
        $this->container['modified'] = isset($data['modified']) ? $data['modified'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets gateway_pool_assoc_id
     *
     * @return int
     */
    public function getGatewayPoolAssocId()
    {
        return $this->container['gateway_pool_assoc_id'];
    }

    /**
     * Sets gateway_pool_assoc_id
     *
     * @param int $gateway_pool_assoc_id gateway_pool_assoc_id
     *
     * @return $this
     */
    public function setGatewayPoolAssocId($gateway_pool_assoc_id)
    {
        $this->container['gateway_pool_assoc_id'] = $gateway_pool_assoc_id;

        return $this;
    }

    /**
     * Gets pool_name
     *
     * @return string
     */
    public function getPoolName()
    {
        return $this->container['pool_name'];
    }

    /**
     * Sets pool_name
     *
     * @param string $pool_name pool_name
     *
     * @return $this
     */
    public function setPoolName($pool_name)
    {
        $this->container['pool_name'] = $pool_name;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param \DateTime $created created
     *
     * @return $this
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets network_id
     *
     * @return int
     */
    public function getNetworkId()
    {
        return $this->container['network_id'];
    }

    /**
     * Sets network_id
     *
     * @param int $network_id network_id
     *
     * @return $this
     */
    public function setNetworkId($network_id)
    {
        $this->container['network_id'] = $network_id;

        return $this;
    }

    /**
     * Gets enterprise_proxy_id
     *
     * @return int
     */
    public function getEnterpriseProxyId()
    {
        return $this->container['enterprise_proxy_id'];
    }

    /**
     * Sets enterprise_proxy_id
     *
     * @param int $enterprise_proxy_id enterprise_proxy_id
     *
     * @return $this
     */
    public function setEnterpriseProxyId($enterprise_proxy_id)
    {
        $this->container['enterprise_proxy_id'] = $enterprise_proxy_id;

        return $this;
    }

    /**
     * Gets site_id
     *
     * @return int
     */
    public function getSiteId()
    {
        return $this->container['site_id'];
    }

    /**
     * Sets site_id
     *
     * @param int $site_id site_id
     *
     * @return $this
     */
    public function setSiteId($site_id)
    {
        $this->container['site_id'] = $site_id;

        return $this;
    }

    /**
     * Gets activation_key
     *
     * @return string
     */
    public function getActivationKey()
    {
        return $this->container['activation_key'];
    }

    /**
     * Sets activation_key
     *
     * @param string $activation_key activation_key
     *
     * @return $this
     */
    public function setActivationKey($activation_key)
    {
        $this->container['activation_key'] = $activation_key;

        return $this;
    }

    /**
     * Gets activation_state
     *
     * @return string
     */
    public function getActivationState()
    {
        return $this->container['activation_state'];
    }

    /**
     * Sets activation_state
     *
     * @param string $activation_state activation_state
     *
     * @return $this
     */
    public function setActivationState($activation_state)
    {
        $this->container['activation_state'] = $activation_state;

        return $this;
    }

    /**
     * Gets activation_time
     *
     * @return \DateTime
     */
    public function getActivationTime()
    {
        return $this->container['activation_time'];
    }

    /**
     * Sets activation_time
     *
     * @param \DateTime $activation_time activation_time
     *
     * @return $this
     */
    public function setActivationTime($activation_time)
    {
        $this->container['activation_time'] = $activation_time;

        return $this;
    }

    /**
     * Gets software_version
     *
     * @return string
     */
    public function getSoftwareVersion()
    {
        return $this->container['software_version'];
    }

    /**
     * Sets software_version
     *
     * @param string $software_version software_version
     *
     * @return $this
     */
    public function setSoftwareVersion($software_version)
    {
        $this->container['software_version'] = $software_version;

        return $this;
    }

    /**
     * Gets build_number
     *
     * @return string
     */
    public function getBuildNumber()
    {
        return $this->container['build_number'];
    }

    /**
     * Sets build_number
     *
     * @param string $build_number build_number
     *
     * @return $this
     */
    public function setBuildNumber($build_number)
    {
        $this->container['build_number'] = $build_number;

        return $this;
    }

    /**
     * Gets utilization
     *
     * @return float
     */
    public function getUtilization()
    {
        return $this->container['utilization'];
    }

    /**
     * Sets utilization
     *
     * @param float $utilization utilization
     *
     * @return $this
     */
    public function setUtilization($utilization)
    {
        $this->container['utilization'] = $utilization;

        return $this;
    }

    /**
     * Gets utilization_detail
     *
     * @return \Swagger\Client\Model\GatewayPoolGatewayUtilizationDetail
     */
    public function getUtilizationDetail()
    {
        return $this->container['utilization_detail'];
    }

    /**
     * Sets utilization_detail
     *
     * @param \Swagger\Client\Model\GatewayPoolGatewayUtilizationDetail $utilization_detail utilization_detail
     *
     * @return $this
     */
    public function setUtilizationDetail($utilization_detail)
    {
        $this->container['utilization_detail'] = $utilization_detail;

        return $this;
    }

    /**
     * Gets connected_edges
     *
     * @return int
     */
    public function getConnectedEdges()
    {
        return $this->container['connected_edges'];
    }

    /**
     * Sets connected_edges
     *
     * @param int $connected_edges connected_edges
     *
     * @return $this
     */
    public function setConnectedEdges($connected_edges)
    {
        $this->container['connected_edges'] = $connected_edges;

        return $this;
    }

    /**
     * Gets connected_edge_list
     *
     * @return \Swagger\Client\Model\GatewayPoolGatewayConnectedEdgeList[]
     */
    public function getConnectedEdgeList()
    {
        return $this->container['connected_edge_list'];
    }

    /**
     * Sets connected_edge_list
     *
     * @param \Swagger\Client\Model\GatewayPoolGatewayConnectedEdgeList[] $connected_edge_list connected_edge_list
     *
     * @return $this
     */
    public function setConnectedEdgeList($connected_edge_list)
    {
        $this->container['connected_edge_list'] = $connected_edge_list;

        return $this;
    }

    /**
     * Gets device_id
     *
     * @return string
     */
    public function getDeviceId()
    {
        return $this->container['device_id'];
    }

    /**
     * Sets device_id
     *
     * @param string $device_id device_id
     *
     * @return $this
     */
    public function setDeviceId($device_id)
    {
        $this->container['device_id'] = $device_id;

        return $this;
    }

    /**
     * Gets logical_id
     *
     * @return string
     */
    public function getLogicalId()
    {
        return $this->container['logical_id'];
    }

    /**
     * Sets logical_id
     *
     * @param string $logical_id logical_id
     *
     * @return $this
     */
    public function setLogicalId($logical_id)
    {
        $this->container['logical_id'] = $logical_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets gateway_state
     *
     * @return string
     */
    public function getGatewayState()
    {
        return $this->container['gateway_state'];
    }

    /**
     * Sets gateway_state
     *
     * @param string $gateway_state gateway_state
     *
     * @return $this
     */
    public function setGatewayState($gateway_state)
    {
        $this->container['gateway_state'] = $gateway_state;

        return $this;
    }

    /**
     * Gets alerts_enabled
     *
     * @return int
     */
    public function getAlertsEnabled()
    {
        return $this->container['alerts_enabled'];
    }

    /**
     * Sets alerts_enabled
     *
     * @param int $alerts_enabled alerts_enabled
     *
     * @return $this
     */
    public function setAlertsEnabled($alerts_enabled)
    {
        $this->container['alerts_enabled'] = $alerts_enabled;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dns_name
     *
     * @return string
     */
    public function getDnsName()
    {
        return $this->container['dns_name'];
    }

    /**
     * Sets dns_name
     *
     * @param string $dns_name dns_name
     *
     * @return $this
     */
    public function setDnsName($dns_name)
    {
        $this->container['dns_name'] = $dns_name;

        return $this;
    }

    /**
     * Gets is_load_balanced
     *
     * @return int
     */
    public function getIsLoadBalanced()
    {
        return $this->container['is_load_balanced'];
    }

    /**
     * Sets is_load_balanced
     *
     * @param int $is_load_balanced is_load_balanced
     *
     * @return $this
     */
    public function setIsLoadBalanced($is_load_balanced)
    {
        $this->container['is_load_balanced'] = $is_load_balanced;

        return $this;
    }

    /**
     * Gets private_ip_address
     *
     * @return string
     */
    public function getPrivateIpAddress()
    {
        return $this->container['private_ip_address'];
    }

    /**
     * Sets private_ip_address
     *
     * @param string $private_ip_address private_ip_address
     *
     * @return $this
     */
    public function setPrivateIpAddress($private_ip_address)
    {
        $this->container['private_ip_address'] = $private_ip_address;

        return $this;
    }

    /**
     * Gets ip_address
     *
     * @return string
     */
    public function getIpAddress()
    {
        return $this->container['ip_address'];
    }

    /**
     * Sets ip_address
     *
     * @param string $ip_address ip_address
     *
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->container['ip_address'] = $ip_address;

        return $this;
    }

    /**
     * Gets last_contact
     *
     * @return \DateTime
     */
    public function getLastContact()
    {
        return $this->container['last_contact'];
    }

    /**
     * Sets last_contact
     *
     * @param \DateTime $last_contact last_contact
     *
     * @return $this
     */
    public function setLastContact($last_contact)
    {
        $this->container['last_contact'] = $last_contact;

        return $this;
    }

    /**
     * Gets system_up_since
     *
     * @return \DateTime
     */
    public function getSystemUpSince()
    {
        return $this->container['system_up_since'];
    }

    /**
     * Sets system_up_since
     *
     * @param \DateTime $system_up_since system_up_since
     *
     * @return $this
     */
    public function setSystemUpSince($system_up_since)
    {
        $this->container['system_up_since'] = $system_up_since;

        return $this;
    }

    /**
     * Gets service_up_since
     *
     * @return \DateTime
     */
    public function getServiceUpSince()
    {
        return $this->container['service_up_since'];
    }

    /**
     * Sets service_up_since
     *
     * @param \DateTime $service_up_since service_up_since
     *
     * @return $this
     */
    public function setServiceUpSince($service_up_since)
    {
        $this->container['service_up_since'] = $service_up_since;

        return $this;
    }

    /**
     * Gets service_state
     *
     * @return string
     */
    public function getServiceState()
    {
        return $this->container['service_state'];
    }

    /**
     * Sets service_state
     *
     * @param string $service_state service_state
     *
     * @return $this
     */
    public function setServiceState($service_state)
    {
        $this->container['service_state'] = $service_state;

        return $this;
    }

    /**
     * Gets endpoint_pki_mode
     *
     * @return string
     */
    public function getEndpointPkiMode()
    {
        return $this->container['endpoint_pki_mode'];
    }

    /**
     * Sets endpoint_pki_mode
     *
     * @param string $endpoint_pki_mode endpoint_pki_mode
     *
     * @return $this
     */
    public function setEndpointPkiMode($endpoint_pki_mode)
    {
        $this->container['endpoint_pki_mode'] = $endpoint_pki_mode;

        return $this;
    }

    /**
     * Gets hand_off_detail
     *
     * @return \Swagger\Client\Model\GatewayHandoffDetail
     */
    public function getHandOffDetail()
    {
        return $this->container['hand_off_detail'];
    }

    /**
     * Sets hand_off_detail
     *
     * @param \Swagger\Client\Model\GatewayHandoffDetail $hand_off_detail hand_off_detail
     *
     * @return $this
     */
    public function setHandOffDetail($hand_off_detail)
    {
        $this->container['hand_off_detail'] = $hand_off_detail;

        return $this;
    }

    /**
     * Gets ipsec_gateway_detail
     *
     * @return \Swagger\Client\Model\GatewayPoolGatewayIpsecGatewayDetail
     */
    public function getIpsecGatewayDetail()
    {
        return $this->container['ipsec_gateway_detail'];
    }

    /**
     * Sets ipsec_gateway_detail
     *
     * @param \Swagger\Client\Model\GatewayPoolGatewayIpsecGatewayDetail $ipsec_gateway_detail ipsec_gateway_detail
     *
     * @return $this
     */
    public function setIpsecGatewayDetail($ipsec_gateway_detail)
    {
        $this->container['ipsec_gateway_detail'] = $ipsec_gateway_detail;

        return $this;
    }

    /**
     * Gets modified
     *
     * @return \DateTime
     */
    public function getModified()
    {
        return $this->container['modified'];
    }

    /**
     * Sets modified
     *
     * @param \DateTime $modified modified
     *
     * @return $this
     */
    public function setModified($modified)
    {
        $this->container['modified'] = $modified;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


