<?php
/**
 * AllApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Velocloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * AllApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AllApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for configurationCloneConfiguration
     *
     * Clone a configuration profile.
     *
     */
    public function testConfigurationCloneConfiguration()
    {
    }

    /**
     * Test case for configurationCloneEnterpriseTemplate
     *
     * Clone the default enterprise configuration profile.
     *
     */
    public function testConfigurationCloneEnterpriseTemplate()
    {
    }

    /**
     * Test case for configurationDeleteConfiguration
     *
     * Delete a configuration profile.
     *
     */
    public function testConfigurationDeleteConfiguration()
    {
    }

    /**
     * Test case for configurationGetConfiguration
     *
     * Get a configuration profile.
     *
     */
    public function testConfigurationGetConfiguration()
    {
    }

    /**
     * Test case for configurationGetConfigurationModules
     *
     * List the modules that compose a configuration profile.
     *
     */
    public function testConfigurationGetConfigurationModules()
    {
    }

    /**
     * Test case for configurationGetRoutableApplications
     *
     * List applications that are first packet routable.
     *
     */
    public function testConfigurationGetRoutableApplications()
    {
    }

    /**
     * Test case for configurationInsertConfigurationModule
     *
     * Insert a new configuration module.
     *
     */
    public function testConfigurationInsertConfigurationModule()
    {
    }

    /**
     * Test case for configurationUpdateConfigurationModule
     *
     * Update a configuration module.
     *
     */
    public function testConfigurationUpdateConfigurationModule()
    {
    }

    /**
     * Test case for disasterRecoveryConfigureActiveForReplication
     *
     * Designate a standby VCO for disaster recovery replication.
     *
     */
    public function testDisasterRecoveryConfigureActiveForReplication()
    {
    }

    /**
     * Test case for disasterRecoveryDemoteActive
     *
     * Demote current server from active to zombie.
     *
     */
    public function testDisasterRecoveryDemoteActive()
    {
    }

    /**
     * Test case for disasterRecoveryGetReplicationBlob
     *
     * Get the blob needed to configure VCO replication on the standby.
     *
     */
    public function testDisasterRecoveryGetReplicationBlob()
    {
    }

    /**
     * Test case for disasterRecoveryGetReplicationStatus
     *
     * Get VCO disaster recovery status.
     *
     */
    public function testDisasterRecoveryGetReplicationStatus()
    {
    }

    /**
     * Test case for disasterRecoveryPrepareForStandby
     *
     * Prepare current VCO to be configured as a standby system.
     *
     */
    public function testDisasterRecoveryPrepareForStandby()
    {
    }

    /**
     * Test case for disasterRecoveryPromoteStandbyToActive
     *
     * Promote the current server to take over as the single standalone VCO.
     *
     */
    public function testDisasterRecoveryPromoteStandbyToActive()
    {
    }

    /**
     * Test case for disasterRecoveryRemoveStandby
     *
     * Unconfigure VCO disaster recovery on the current server.
     *
     */
    public function testDisasterRecoveryRemoveStandby()
    {
    }

    /**
     * Test case for disasterRecoveryTransitionToStandby
     *
     * Configure current VCO to transition to standby in disaster recovery active/standby pair..
     *
     */
    public function testDisasterRecoveryTransitionToStandby()
    {
    }

    /**
     * Test case for edgeDeleteEdge
     *
     * Delete an edge.
     *
     */
    public function testEdgeDeleteEdge()
    {
    }

    /**
     * Test case for edgeDeleteEdgeBgpNeighborRecords
     *
     * Delete edge BGP neighbor records.
     *
     */
    public function testEdgeDeleteEdgeBgpNeighborRecords()
    {
    }

    /**
     * Test case for edgeEdgeCancelReactivation
     *
     * Cancel a pending edge reactivation request.
     *
     */
    public function testEdgeEdgeCancelReactivation()
    {
    }

    /**
     * Test case for edgeEdgeProvision
     *
     * Provision an edge.
     *
     */
    public function testEdgeEdgeProvision()
    {
    }

    /**
     * Test case for edgeEdgeRequestReactivation
     *
     * Reactivate an edge.
     *
     */
    public function testEdgeEdgeRequestReactivation()
    {
    }

    /**
     * Test case for edgeGetEdge
     *
     * Get edge.
     *
     */
    public function testEdgeGetEdge()
    {
    }

    /**
     * Test case for edgeGetEdgeConfigurationStack
     *
     * Get an edge's configuration stack.
     *
     */
    public function testEdgeGetEdgeConfigurationStack()
    {
    }

    /**
     * Test case for edgeSetEdgeEnterpriseConfiguration
     *
     * Apply an enterprise configuration to an Edge.
     *
     */
    public function testEdgeSetEdgeEnterpriseConfiguration()
    {
    }

    /**
     * Test case for edgeSetEdgeHandOffGateways
     *
     * Set an edge's on-premise hand off gateways.
     *
     */
    public function testEdgeSetEdgeHandOffGateways()
    {
    }

    /**
     * Test case for edgeSetEdgeOperatorConfiguration
     *
     * Apply an operator configuration to an Edge.
     *
     */
    public function testEdgeSetEdgeOperatorConfiguration()
    {
    }

    /**
     * Test case for edgeUpdateEdgeAdminPassword
     *
     * Update edge's local UI authentication credentials.
     *
     */
    public function testEdgeUpdateEdgeAdminPassword()
    {
    }

    /**
     * Test case for edgeUpdateEdgeAttributes
     *
     * Update edge attributes.
     *
     */
    public function testEdgeUpdateEdgeAttributes()
    {
    }

    /**
     * Test case for edgeUpdateEdgeCredentialsByConfiguration
     *
     * Update edge UI credentials by configuration id.
     *
     */
    public function testEdgeUpdateEdgeCredentialsByConfiguration()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterprise
     *
     * Delete an enterprise.
     *
     */
    public function testEnterpriseDeleteEnterprise()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterpriseGatewayRecords
     *
     * Delete enterprise gateway record(s).
     *
     */
    public function testEnterpriseDeleteEnterpriseGatewayRecords()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterpriseNetworkAllocation
     *
     * Delete an enterprise network allocation.
     *
     */
    public function testEnterpriseDeleteEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterpriseService
     *
     * Delete an enterprise service.
     *
     */
    public function testEnterpriseDeleteEnterpriseService()
    {
    }

    /**
     * Test case for enterpriseGetEnterprise
     *
     * Get enterprise.
     *
     */
    public function testEnterpriseGetEnterprise()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseAddresses
     *
     * Get enterprise IP address information.
     *
     */
    public function testEnterpriseGetEnterpriseAddresses()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseAlertConfigurations
     *
     * Get the enterprise alert configuration.
     *
     */
    public function testEnterpriseGetEnterpriseAlertConfigurations()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseAlerts
     *
     * Get a list of the alerts triggered for the enterprise.
     *
     */
    public function testEnterpriseGetEnterpriseAlerts()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseAllAlertRecipients
     *
     * List recipients currently receiving ALL enterprise alerts.
     *
     */
    public function testEnterpriseGetEnterpriseAllAlertRecipients()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseCapabilities
     *
     * Get enterprise capabilities.
     *
     */
    public function testEnterpriseGetEnterpriseCapabilities()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseConfigurations
     *
     * Get enterprise configuration profiles.
     *
     */
    public function testEnterpriseGetEnterpriseConfigurations()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseEdges
     *
     * Get edges associated with an enterprise.
     *
     */
    public function testEnterpriseGetEnterpriseEdges()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseGatewayHandoff
     *
     * Get enterprise gateway handoff configuration.
     *
     */
    public function testEnterpriseGetEnterpriseGatewayHandoff()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseNetworkAllocation
     *
     * Get an enterprise network allocation.
     *
     */
    public function testEnterpriseGetEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseNetworkAllocations
     *
     * Get all network allocation objects defined on an enterprise.
     *
     */
    public function testEnterpriseGetEnterpriseNetworkAllocations()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseRouteConfiguration
     *
     * Get route advertisement and routing preferences policy.
     *
     */
    public function testEnterpriseGetEnterpriseRouteConfiguration()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseRouteTable
     *
     * Get the enterprise route table.
     *
     */
    public function testEnterpriseGetEnterpriseRouteTable()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseServices
     *
     * Get enterprise network service detail.
     *
     */
    public function testEnterpriseGetEnterpriseServices()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseUsers
     *
     * Get list of enterprise users by enterprise id.
     *
     */
    public function testEnterpriseGetEnterpriseUsers()
    {
    }

    /**
     * Test case for enterpriseInsertEnterprise
     *
     * Insert a new enterprise.
     *
     */
    public function testEnterpriseInsertEnterprise()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseNetworkAllocation
     *
     * Insert an enterprise network allocation.
     *
     */
    public function testEnterpriseInsertEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseService
     *
     * Insert a new enterprise service.
     *
     */
    public function testEnterpriseInsertEnterpriseService()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseUser
     *
     * Insert an enterprise user.
     *
     */
    public function testEnterpriseInsertEnterpriseUser()
    {
    }

    /**
     * Test case for enterpriseInsertOrUpdateEnterpriseAlertConfigurations
     *
     * Insert, update, or delete enterprise alert configurations.
     *
     */
    public function testEnterpriseInsertOrUpdateEnterpriseAlertConfigurations()
    {
    }

    /**
     * Test case for enterpriseInsertOrUpdateEnterpriseCapability
     *
     * Insert or update an enterprise capability.
     *
     */
    public function testEnterpriseInsertOrUpdateEnterpriseCapability()
    {
    }

    /**
     * Test case for enterpriseInsertOrUpdateEnterpriseGatewayHandoff
     *
     * Insert or update an enterprise gateway handoff configuration.
     *
     */
    public function testEnterpriseInsertOrUpdateEnterpriseGatewayHandoff()
    {
    }

    /**
     * Test case for enterpriseProxyGetEnterpriseProxyEdgeInventory
     *
     * Get a list of all partner enterprises and edge inventory associated with each enterprise.
     *
     */
    public function testEnterpriseProxyGetEnterpriseProxyEdgeInventory()
    {
    }

    /**
     * Test case for enterpriseProxyGetEnterpriseProxyEnterprises
     *
     * Get a list of all partner enterprises.
     *
     */
    public function testEnterpriseProxyGetEnterpriseProxyEnterprises()
    {
    }

    /**
     * Test case for enterpriseProxyGetEnterpriseProxyGatewayPools
     *
     * Get list of gateway pools.
     *
     */
    public function testEnterpriseProxyGetEnterpriseProxyGatewayPools()
    {
    }

    /**
     * Test case for enterpriseProxyGetEnterpriseProxyOperatorProfiles
     *
     * Get the operator profiles associated with a partner.
     *
     */
    public function testEnterpriseProxyGetEnterpriseProxyOperatorProfiles()
    {
    }

    /**
     * Test case for enterpriseProxyInsertEnterpriseProxyEnterprise
     *
     * Insert a new enterprise owned by an MSP.
     *
     */
    public function testEnterpriseProxyInsertEnterpriseProxyEnterprise()
    {
    }

    /**
     * Test case for enterpriseSetEnterpriseAllAlertRecipients
     *
     * Set the recipients who should receive all alerts for an enterprise.
     *
     */
    public function testEnterpriseSetEnterpriseAllAlertRecipients()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterprise
     *
     * Update an enterprise.
     *
     */
    public function testEnterpriseUpdateEnterprise()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseNetworkAllocation
     *
     * Update an enterprise network allocation.
     *
     */
    public function testEnterpriseUpdateEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseRoute
     *
     * Update an enterprise route.
     *
     */
    public function testEnterpriseUpdateEnterpriseRoute()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseRouteConfiguration
     *
     * Update enterprise routing configuration.
     *
     */
    public function testEnterpriseUpdateEnterpriseRouteConfiguration()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseSecurityPolicy
     *
     * Update enterprise security policy.
     *
     */
    public function testEnterpriseUpdateEnterpriseSecurityPolicy()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseService
     *
     * Update an enterprise service.
     *
     */
    public function testEnterpriseUpdateEnterpriseService()
    {
    }

    /**
     * Test case for enterpriseUserDeleteEnterpriseUser
     *
     * Delete an enterprise user..
     *
     */
    public function testEnterpriseUserDeleteEnterpriseUser()
    {
    }

    /**
     * Test case for enterpriseUserGetEnterpriseUser
     *
     * Get an enterprise user.
     *
     */
    public function testEnterpriseUserGetEnterpriseUser()
    {
    }

    /**
     * Test case for enterpriseUserUpdateEnterpriseUser
     *
     * Update an enterprise user.
     *
     */
    public function testEnterpriseUserUpdateEnterpriseUser()
    {
    }

    /**
     * Test case for eventGetEnterpriseEvents
     *
     * Fetch edge events.
     *
     */
    public function testEventGetEnterpriseEvents()
    {
    }

    /**
     * Test case for eventGetOperatorEvents
     *
     * Fetch operator events.
     *
     */
    public function testEventGetOperatorEvents()
    {
    }

    /**
     * Test case for firewallGetEnterpriseFirewallLogs
     *
     * Get enterprise firewall logs.
     *
     */
    public function testFirewallGetEnterpriseFirewallLogs()
    {
    }

    /**
     * Test case for gatewayDeleteGateway
     *
     * Delete a gateway.
     *
     */
    public function testGatewayDeleteGateway()
    {
    }

    /**
     * Test case for gatewayGatewayProvision
     *
     * Provision a gateway.
     *
     */
    public function testGatewayGatewayProvision()
    {
    }

    /**
     * Test case for gatewayUpdateGatewayAttributes
     *
     * Update gateway attributes.
     *
     */
    public function testGatewayUpdateGatewayAttributes()
    {
    }

    /**
     * Test case for linkQualityEventGetLinkQualityEvents
     *
     * Get link quality data.
     *
     */
    public function testLinkQualityEventGetLinkQualityEvents()
    {
    }

    /**
     * Test case for liveModeEnterLiveMode
     *
     * Enter live mode on an edge.
     *
     */
    public function testLiveModeEnterLiveMode()
    {
    }

    /**
     * Test case for liveModeExitLiveMode
     *
     * Exit live mode on an edge.
     *
     */
    public function testLiveModeExitLiveMode()
    {
    }

    /**
     * Test case for liveModeReadLiveData
     *
     * Read live data from an edge that is in live mode.
     *
     */
    public function testLiveModeReadLiveData()
    {
    }

    /**
     * Test case for loginEnterpriseLogin
     *
     * Authentication for non-operator users.
     *
     */
    public function testLoginEnterpriseLogin()
    {
    }

    /**
     * Test case for loginOperatorLogin
     *
     * Authentication for an operator user.
     *
     */
    public function testLoginOperatorLogin()
    {
    }

    /**
     * Test case for logout
     *
     * Deactivate a given authorization cookie.
     *
     */
    public function testLogout()
    {
    }

    /**
     * Test case for meta
     *
     * Get meta-data on any other API call.
     *
     */
    public function testMeta()
    {
    }

    /**
     * Test case for metricsGetEdgeAppLinkMetrics
     *
     * Get flow metric aggregate data by link.
     *
     */
    public function testMetricsGetEdgeAppLinkMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeAppLinkSeries
     *
     * Get flow metric time series data by link.
     *
     */
    public function testMetricsGetEdgeAppLinkSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeAppMetrics
     *
     * Get flow metric aggregate data by application.
     *
     */
    public function testMetricsGetEdgeAppMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeAppSeries
     *
     * Get flow metric time series data by application.
     *
     */
    public function testMetricsGetEdgeAppSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeCategoryMetrics
     *
     * Get flow metric aggregate data by application category.
     *
     */
    public function testMetricsGetEdgeCategoryMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeCategorySeries
     *
     * Get flow metric time series data by application category.
     *
     */
    public function testMetricsGetEdgeCategorySeries()
    {
    }

    /**
     * Test case for metricsGetEdgeDestMetrics
     *
     * Get flow metric aggregate data by destination.
     *
     */
    public function testMetricsGetEdgeDestMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeDestSeries
     *
     * Get flow metric time series data by destination.
     *
     */
    public function testMetricsGetEdgeDestSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeDeviceMetrics
     *
     * Get flow metric aggregate data by client device.
     *
     */
    public function testMetricsGetEdgeDeviceMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeDeviceSeries
     *
     * Get flow metric time series data by client device.
     *
     */
    public function testMetricsGetEdgeDeviceSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeLinkMetrics
     *
     * Get advanced flow metric aggregate data by link.
     *
     */
    public function testMetricsGetEdgeLinkMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeLinkSeries
     *
     * Get advanced flow metric time series data by link.
     *
     */
    public function testMetricsGetEdgeLinkSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeOsMetrics
     *
     * Get flow metric aggregate data by client OS.
     *
     */
    public function testMetricsGetEdgeOsMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeOsSeries
     *
     * Get flow metric time series data by client OS.
     *
     */
    public function testMetricsGetEdgeOsSeries()
    {
    }

    /**
     * Test case for metricsGetEdgeSegmentMetrics
     *
     * Get flow metric aggregate data by segment Id.
     *
     */
    public function testMetricsGetEdgeSegmentMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeSegmentSeries
     *
     * Get flow metric time series data by segment id.
     *
     */
    public function testMetricsGetEdgeSegmentSeries()
    {
    }

    /**
     * Test case for monitoringGetAggregateEdgeLinkMetrics
     *
     * Get aggregated edge link metrics across enterprises.
     *
     */
    public function testMonitoringGetAggregateEdgeLinkMetrics()
    {
    }

    /**
     * Test case for monitoringGetAggregateEnterpriseEvents
     *
     * Fetch all enterprise events.
     *
     */
    public function testMonitoringGetAggregateEnterpriseEvents()
    {
    }

    /**
     * Test case for monitoringGetAggregates
     *
     * Get aggregate enterprise and edge information.
     *
     */
    public function testMonitoringGetAggregates()
    {
    }

    /**
     * Test case for monitoringGetEnterpriseBgpPeerStatus
     *
     * Get gateway BGP peer status for all enterprise gateways.
     *
     */
    public function testMonitoringGetEnterpriseBgpPeerStatus()
    {
    }

    /**
     * Test case for monitoringGetEnterpriseEdgeBgpPeerStatus
     *
     * Get edge BGP peer status for all enterprise edges.
     *
     */
    public function testMonitoringGetEnterpriseEdgeBgpPeerStatus()
    {
    }

    /**
     * Test case for monitoringGetEnterpriseEdgeLinkStatus
     *
     * Get edge and link status data.
     *
     */
    public function testMonitoringGetEnterpriseEdgeLinkStatus()
    {
    }

    /**
     * Test case for networkDeleteNetworkGatewayPool
     *
     * Delete a gateway pool.
     *
     */
    public function testNetworkDeleteNetworkGatewayPool()
    {
    }

    /**
     * Test case for networkGetNetworkConfigurations
     *
     * Get operator configuration profiles.
     *
     */
    public function testNetworkGetNetworkConfigurations()
    {
    }

    /**
     * Test case for networkGetNetworkEnterprises
     *
     * Get a list of the enterprises on a network.
     *
     */
    public function testNetworkGetNetworkEnterprises()
    {
    }

    /**
     * Test case for networkGetNetworkGatewayPools
     *
     * Get list of gateway pools.
     *
     */
    public function testNetworkGetNetworkGatewayPools()
    {
    }

    /**
     * Test case for networkGetNetworkGateways
     *
     * Get list of gateways.
     *
     */
    public function testNetworkGetNetworkGateways()
    {
    }

    /**
     * Test case for networkGetNetworkOperatorUsers
     *
     * Get list of operator users for a network.
     *
     */
    public function testNetworkGetNetworkOperatorUsers()
    {
    }

    /**
     * Test case for networkInsertNetworkGatewayPool
     *
     * Insert a gateway pool.
     *
     */
    public function testNetworkInsertNetworkGatewayPool()
    {
    }

    /**
     * Test case for networkUpdateNetworkGatewayPoolAttributes
     *
     * Update gateway pool attributes.
     *
     */
    public function testNetworkUpdateNetworkGatewayPoolAttributes()
    {
    }

    /**
     * Test case for operatorUserDeleteOperatorUser
     *
     * Delete an operator user.
     *
     */
    public function testOperatorUserDeleteOperatorUser()
    {
    }

    /**
     * Test case for operatorUserGetOperatorUser
     *
     * Get an operator user.
     *
     */
    public function testOperatorUserGetOperatorUser()
    {
    }

    /**
     * Test case for operatorUserInsertOperatorUser
     *
     * Insert an operator user.
     *
     */
    public function testOperatorUserInsertOperatorUser()
    {
    }

    /**
     * Test case for operatorUserUpdateOperatorUser
     *
     * Update an operator user.
     *
     */
    public function testOperatorUserUpdateOperatorUser()
    {
    }

    /**
     * Test case for roleCreateRoleCustomization
     *
     * Create a role customization.
     *
     */
    public function testRoleCreateRoleCustomization()
    {
    }

    /**
     * Test case for roleDeleteRoleCustomization
     *
     * Delete a role customization.
     *
     */
    public function testRoleDeleteRoleCustomization()
    {
    }

    /**
     * Test case for roleGetUserTypeRoles
     *
     * Get the roles defined for a user type.
     *
     */
    public function testRoleGetUserTypeRoles()
    {
    }

    /**
     * Test case for roleSetEnterpriseDelegatedToEnterpriseProxy
     *
     * Grant enterprise access to an enterprise proxy.
     *
     */
    public function testRoleSetEnterpriseDelegatedToEnterpriseProxy()
    {
    }

    /**
     * Test case for roleSetEnterpriseDelegatedToOperator
     *
     * Grant enterprise access to the network operator.
     *
     */
    public function testRoleSetEnterpriseDelegatedToOperator()
    {
    }

    /**
     * Test case for roleSetEnterpriseProxyDelegatedToOperator
     *
     * Grant enterprise proxy access to the network operator.
     *
     */
    public function testRoleSetEnterpriseProxyDelegatedToOperator()
    {
    }

    /**
     * Test case for roleSetEnterpriseUserManagementDelegatedToOperator
     *
     * Grant enterprise user access to the network operator.
     *
     */
    public function testRoleSetEnterpriseUserManagementDelegatedToOperator()
    {
    }

    /**
     * Test case for systemPropertyGetSystemProperty
     *
     * Get system property.
     *
     */
    public function testSystemPropertyGetSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyInsertOrUpdateSystemProperty
     *
     * Insert or update a system property.
     *
     */
    public function testSystemPropertyInsertOrUpdateSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyInsertSystemProperty
     *
     * Insert a system property.
     *
     */
    public function testSystemPropertyInsertSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyUpdateSystemProperty
     *
     * Update a system property.
     *
     */
    public function testSystemPropertyUpdateSystemProperty()
    {
    }
}
